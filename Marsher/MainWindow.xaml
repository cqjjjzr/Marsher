<Controls:MetroWindow x:Class="Marsher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:Tx="http://unclassified.software/source/txtranslation"
        xmlns:asf="clr-namespace:AirspaceFixer;assembly=AirspaceFixer"
        xmlns:local="clr-namespace:Marsher"
        mc:Ignorable="d"
        xml:lang="en-US"
        Title="Marsher" Height="530" Width="800"

        Dialog:DialogParticipation.Register="{Binding}"
        GlowBrush="{DynamicResource AccentColorBrush}" ContentRendered="MetroWindow_OnContentRendered" d:DataContext="{d:DesignInstance local:MainViewModel}" Closing="MetroWindow_Closing" Icon="Resources/Icons/Logo.ico">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="{Binding Version}" IsEnabled="False" Foreground="Black"></Button>
            <Button x:Name="LoginCommand" Content="{Tx:T ui.commands.login}" Click="LoginCommand_Click">
                <Button.ContextMenu>
                    <ContextMenu x:Name="LoginContextMenu">
                        <MenuItem x:Name="LoginToMarshmallowContextMenuItem" Header="{Tx:T ui.commands.login.marshmallow}" Click="LoginToMarshmallowContextMenuItem_Click" />
                        <MenuItem x:Name="LoginToPeingContextMenuItem" Header="{Tx:T ui.commands.login.peing}" Click="LoginToPeingContextMenuItem_Click" />
                        <Separator />
                        <MenuItem x:Name="LogoutContextMenuItem" Header="{Tx:T ui.commands.login.logout}" Click="LogoutContextMenuItem_Click" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button x:Name="FetchCommand" Content="{Tx:T ui.commands.fetch}" Click="FetchCommand_Click" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.Resources>
        <CollectionViewSource x:Key="AllQaItemsHolder" Source="{Binding AllQaItemsHolder}"/>
        <CollectionViewSource x:Key="QaListStubs" Source="{Binding QaListStubs}"/>
        <CompositeCollection x:Key="AllQaLists">
            <CollectionContainer Collection="{Binding Source={StaticResource AllQaItemsHolder}}" />
            <CollectionContainer Collection="{Binding Source={StaticResource QaListStubs}}" />
        </CompositeCollection>
    </Controls:MetroWindow.Resources>
    <DockPanel LastChildFill="True">
        <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <WrapPanel>
                    <iconPacks:PackIconMaterial Kind="{Binding Path=MarshmallowStatus}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <TextBlock Text="{Tx:T ui.status.marshmallow}" Margin="3,0" />
                    <iconPacks:PackIconMaterial Kind="{Binding Path=PeingStatus}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <TextBlock Text="{Tx:T ui.status.peing}" Margin="3,0" />
                </WrapPanel>
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <WrapPanel>
                    <ProgressBar Margin="0,0,12,0" Width="30" IsIndeterminate="True" Visibility="{Binding ProgressBarVisibility}"></ProgressBar>
                    <TextBlock Text="{Binding Path=StatusText}"></TextBlock>
                </WrapPanel>
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Stretch">
                <TextBlock TextWrapping="Wrap" Text="{Binding ServerStatusText}"/>
            </StatusBarItem>
        </StatusBar>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <DockPanel Grid.Column="0">
                <StackPanel DockPanel.Dock="Top">
                    <ComboBox x:Name="QaListSelector"
                              Margin="1,0"
                              DisplayMemberPath="Name" ItemsSource="{StaticResource AllQaLists}"
                              SelectedIndex="0" SelectedItem="{Binding ActiveQaList}" />
                    <WrapPanel>
                        <Button x:Name="ListCreateButton" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" Click="ListCreateButton_Click" ToolTip="{Tx:T ui.toolbar.new_list}">
                            <iconPacks:PackIconMaterial Kind="Plus" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="GreenYellow"/>
                        </Button>
                        <Button x:Name="ListRemoveButton" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" IsEnabled="{Binding Path=ActiveQaListEditable}" Click="ListRemoveButton_Click" ToolTip="{Tx:T ui.toolbar.remove_list}">
                            <iconPacks:PackIconMaterial Kind="Minus" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Red"/>
                        </Button>
                        <Button x:Name="ListRenameButton" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" IsEnabled="{Binding Path=ActiveQaListEditable}" Click="ListRenameButton_Click" ToolTip="{Tx:T ui.toolbar.rename_list}">
                            <iconPacks:PackIconMaterial Kind="Textbox" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>
                        </Button>
                        <Button x:Name="ListEditButton" Width="32" Height="32" Background="Transparent" BorderBrush="Transparent" IsEnabled="{Binding Path=ActiveQaListEditable}" Click="ListEditButton_Click" ToolTip="{Tx:T ui.toolbar.edit_list}">
                            <iconPacks:PackIconMaterial Kind="Pen" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>
                        </Button>
                        <Grid
                            dd:DragDrop.IsDropTarget="True"
                            dd:DragDrop.DropHandler="{Binding}">
                            <Rectangle x:Name="RemoveRectangle" Stroke="#BF000000" Height="24" Width="150" StrokeThickness="1" StrokeDashArray="4 4" RadiusX="5" RadiusY="5"
                                       SnapsToDevicePixels="True" />
                            <DockPanel VerticalAlignment="Center" DockPanel.Dock="Right">
                                <iconPacks:PackIconMaterial DockPanel.Dock="Left" Kind="Delete" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,1,0,0" Foreground="#BF000000" Width="15" Height="15" />
                                <TextBlock DockPanel.Dock="Right" Text="{Tx:T ui.toolbar.drag_to_remove}" Margin="0,0,3,0" Foreground="#BF000000" FontSize="11.5" TextAlignment="Center"/>
                            </DockPanel>
                        </Grid>

                    </WrapPanel>
                </StackPanel>
                <Grid>
                    <local:QaListView x:Name="QaList" Margin="0" ItemsSource="{Binding ActiveQaItems}" DockPanel.Dock="Bottom"
                                      AllowDropExtended="{Binding Path=ActiveQaListEditable}" SelectedItem="{Binding ActiveQaItem, Mode=OneWayToSource}"  />
                    <local:EmptyListIndicator PrimaryString="{Tx:T ui.list.empty}" SecondaryString="{Binding EmptyListIndicatorText}" IsHitTestVisible="False"
                                              Width="Auto" Panel.ZIndex="1" Visibility="{Binding EmptyListIndicatorVisibility}"/>
                </Grid>

            </DockPanel>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="220" />
                    <RowDefinition Height="5" />
                    <RowDefinition />
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <GroupBox Header="{Tx:T ui.preview}" VerticalAlignment="Stretch" Margin="10,10,10,10" HorizontalAlignment="Stretch" Grid.Row="0">
                    <asf:AirspacePanel FixAirspace="{Binding FixAirspace}">
                        <WebBrowser x:Name="PreviewBrowser" />
                    </asf:AirspacePanel>
                </GroupBox>
                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
                <Grid Margin="10,10,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" DataContext="{Binding ActiveQaItem}">
                    <Grid.Resources >
                        <Style TargetType="Border" >
                            <Setter Property="Padding" Value="4,4,4,4" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" Margin="4" Content="{Tx:T ui.item.id}" />
                    <TextBox x:Name="IDTextBox" Grid.Column="1" Grid.Row="0" Margin="4" IsReadOnly="True" Text="{Binding Id}"/>
                    <Label Grid.Column="0" Grid.Row="1" Margin="4" Content="{Tx:T ui.item.content}" />
                    <TextBox x:Name="ContentTextBox" Grid.Column="1" Grid.Row="1" Margin="4" Text="{Binding Content}" TextWrapping="Wrap" TextChanged="ContentTextBox_TextChanged" AcceptsReturn="True"/>
                </Grid>
                <Button x:Name="DisplayButton" Content="{Tx:T ui.item.display}" Margin="10,7,10,10" Grid.Row="3" Click="DisplayButton_Click"/>
            </Grid>
        </Grid>
    </DockPanel>
</Controls:MetroWindow>